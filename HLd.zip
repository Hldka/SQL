--table nasil olusturulur:

--1.yol sifirdan table olusturma:

CREATE TABLE students 
(
student_id SMALLINT,
	student_name VARCHAR(50),
	student_age SMALLINT,
	student_dob DATE

);
SELECT *FROM students;
-- 2. Yol : Baska bir table kullanarak table olusturma:
CREATE TABLE student_name_age
AS SELECT student_name,student_age
FROM students;

SELECT * FROM students;

CREATE TABLE students 
(
student_id SMALLINT UNIQUE,--> student_id unique ==> null deger disindaki degerler tekrarsiz olmalidir.coklu null degeri alabilir
	student_name VARCHAR(50),
	student_age SMALLINT,
	student_dob DATE

);
--FOREIGN KEY Constraint nasil eklenir

Create Table  parents
(
student_id SMALLINT,
	parent_name VARCHAR(50),
	phone_number CHAR(11),
	CONSTRAINT student_id_pk PRIMARY KEY(student_id)

);


CREATE TABLE students 
(
student_id SMALLINT UNIQUE,
	student_name VARCHAR(50),
	student_age SMALLINT,
	student_dob DATE,
CONSTRAINT student_id_fk FOREIGN KEY(student_id) REFERENCES parents(student_id)

);

SELECT*FROM students;
--Check COnstraint nasil eklenir :

CREATE TABLE students 
(
student_id SMALLINT PRIMARY KEY,
	student_name VARCHAR(50),
	student_age SMALLINT NOT NULL,
	student_dob DATE,
CONSTRAINT student_age_check CHECK(student_age BETWEEN 0 AND 30), --0 ve 30 dahil 
	CONSTRAINT student_name_check CHECK(student_name=UPPER(student_name))

);

--Table'a veri nasil girilir :
INSERT INTO students VALUES(101,'ALI CAN', 13,'2008-08-10');
INSERT INTO students VALUES(102,'VELI HAN', 14,'2007-08-10');
INSERT INTO students VALUES(103,'AYSE TAN', 14,'2007-08-10');
--INteger degerler single quote ile veya yalin kullanilabir
INSERT INTO students VALUES('104','Kemal KUZU', 15,NULL);
INSERT INTO students VALUES('105','TOM HANKS', 15,'2006-09-07');
INSERT INTO students(student_id,student_age) values(108,17);
INSERT INTO students(student_name,student_id,student_age) values('JOHN WALKER',109,17);


--VAROLAN bir data nasil degistirilir
UPDATE students 
SET student_name='LEO OCEAN'
WHERE student_id=108;
SELECT*FROM students;
--sütunlari worke_id, worker-name,worker-salary olan bir "workers" table olustrurun
--worker_id sütununu,worker-id_ok adiyla primary key atun
--4 record giirisi yapin
--Table'i lonsolda görüntüleyin

CREATE TABLE workers
(
worker_id SMALLINT,
	worker_name VARCHAR(50),
	worker_salary SMALLINT,
	CONSTRAINT worker_id_pk PRIMARY KEY (worker_id)
)
INSERT INTO workers VALUES (101,'Ali Can',12000);
INSERT INTO workers VALUES (102,'Veli Han',2000);
INSERT INTO workers VALUES (103,'Ayse kan',7000);
INSERT INTO workers VALUES (104,'Angie Ocean',8500);

--VEli han'in salary degerini en yüksek salary degerinin %20 düsügüne yükseltin
UPDATE workers

SET worker_salary=(SELECT MAX(worker_salary)*0.8 FROM workers)
WHERE worker_id=102;
--Ali CAn'in salary degerini en düsük salary degerinin %30 fazlasina düsürünüz

UPDATE workers
SET worker_salary =(SELECT MIN(worker_salary)*1.3 FROM workers)
WHERE worker_id=101;

--ortalma salary degerinden düsük olan salary degerini 1000 artirin
UPDATE workers
SET worker_salary =worker_salary+1000
WHERE worker_salary <(SELECT AVG(worker_salary)FROM workers);
--ortalama salary degerinden düsük olanalri ortlama salary degerine atayin
UPDATE workers
SET worker_salary=(SELECT AVG(worker_salary)FROM workers)
WHERE worker_salary < (SELECT AVG (worker_salary)FROm workers);


SELECT*FROM workers;


--Is NUll condition 
CREATE TABLE people
( ssn INT,
 name VARCHAR(50),
 address VARCHAR(80)

);
INSERT INTO people VALUES (123456789,'Mark Star','Florida');
INSERT INTO people VALUES (234567890,'Angie Way','Virginia');
INSERT INTO people VALUES (345678901,'Mary Tien','New Jersey');
INSERT INTO people(ssn,address) VALUES (456789012,'Michigan');
INSERT INTO people(ssn,address) VALUES (567890123,'California');
INSERT INTO people(ssn,name) VALUES (567890123,'California');
--null degerini "TO be inserted later" degerine güncelleyin
UPDATE people
SET name='To be inserted later'
WHERE name is NULL;
--null addres degerlerini "to be inserted later "degerine güncelleyin
UPDATE people
SET address='to be inserted later'
WHERE address is NULL;
--Bir table'dan Record nasil silinir 
DELETE  FROM people
WHERE ssn ='234567890';

--isimleri recordlari silin
DELETE FROM people 
WHERE name= 'TO ne inserted later';
--tüm recordlari sil,table yok etmez
DELETE FROM people;
--name ve addressler degeri nullolan recordlari siler 
DELETE FROM people
WHERE name IS null OR address IS NULL;

--ssn degeri 123456789'dan büyük ve 345678901'den küycük olan recordlari sil
DELETE FROM people 
WHERE ssn > '123456789' AND ssn< '345678901';
--name degeri NULL olmayan recordlari silin
DELETE FROM people 
WHERE name IS NOT NULL;

TRUNCATE TABLE people;
--TRUNCATE command tüm recordlari siler
--DELETE ile kisman ayni islevi görür
--tRUNCATE ile DELETE arasindaki fark nedir?
--1)DELETE komutunda filtrelemek icin WHere Clause kullanilabilir fakat TRUNCATE komutunda kullanilmaz 
--2)DELETE komutunda sildigimiz recordlar geri cagrilabiliriz fakat TURNCATE komutunda recordlari geri cagrilmaz(ROLL BACK)
--SChema (sema)'dan Table nasil kaldirilir'
DROP TABLE people;
--DQL data query language. DAta okumak icin kullanilan dil
SELECT*FROM people;


CREATE TABLE workers
(
worker_id SMALLINT,
	worker_name VARCHAR(50),
	worker_salary SMALLINT,
	CONSTRAINT worker_id_pk PRIMARY KEY (worker_id)
)
INSERT INTO workers VALUES (101,'Ali Can',12000);
INSERT INTO workers VALUES (102,'Veli Han',2000);
INSERT INTO workers VALUES (103,'Ayse kan',7000);
INSERT INTO workers VALUES (104,'Angie Ocean',8500);
--tüm recordlar cagirilir
SELECT*FROM workers;
--SEpesifik bir field(sutün) nasil cagrilir;
SELECT worker_name
FROM workers;
--Spesifik coklu fieldler nasil cagrilir;
SELECT worker_name ,worker_salary FROM workers;
--spesifik bir record nasil cagrilir;
SELECT * FROM workers WHERE worker_id=10001;

--coklu spesifik record nasil cagrilir
SELECT*
FROM workers
WHERE worker_id<10003;
--Salary degereelri 2000,7000 yada 12000 olan recordlari cagirin

SELECT *FROM workers 
WHERE worker_salary=2000 OR worker_salary =12000;
--2.yol
SELECT *
FROM workers
WHERE salary IN(2000,7000,12000);
--en yüksek salary degeri record'i cagir
SELECT *
FROM workers
WHERE worker_salary = (SELECT MAX(worker_salary) FROM workers);
--en ydüsük salary degeri record'i cagir
SELECT *
FROM workers
WHERE worker_salary = (SELECT MIN(worker_salary) FROM workers);

CREATE TABLE workers
(
id SMALLINT,
name VARCHAR(50),
salary SMALLINT,
	CONSTRAINT id_pk PRIMARY KEY (id)
);
INSERT INTO workers VALUES (10001,'Ali Can',12000);
INSERT INTO workers VALUES (10002,'Veli Han',2000);
INSERT INTO workers VALUES (10003,'Mary Star',7000);
INSERT INTO workers VALUES (10004,'Angie Ocean',8500);
SELECT*FROM workers;
--En düsük ve en büyük salary degerine sahip recordlari cagiriniz
SELECT*
FROM workers WHERE salary=(Select MIN(salary) FROM workers)AND (SElECT MAX(salary) FROM workers);
